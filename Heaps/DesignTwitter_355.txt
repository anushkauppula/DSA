// O(n), O(1)
class Twitter {
    private static int timeStamp = 0;

    private static class Tweet{

        public int tweetId, time;
        public Tweet(int tweetId, int time){
            this.tweetId = tweetId;
            this.time = time;
        }
    }

    Map<Integer, List<Tweet>> userTweets = null;
    Map<Integer, Set<Integer>> userFollows = null;

    public Twitter() {
        userTweets = new HashMap<>();
        userFollows = new HashMap<>();
    }
    
    public void postTweet(int userId, int tweetId) {
        userTweets.putIfAbsent(userId, new ArrayList<>());
        userTweets.get(userId).add(new Tweet(tweetId, timeStamp++));
    }
    
    public List<Integer> getNewsFeed(int userId) {
        PriorityQueue<Tweet> minHeap = new PriorityQueue<>((a, b) -> a.time - b.time);
        Set<Integer> follows = userFollows.getOrDefault(userId, new HashSet<>());
        follows.add(userId); //get own tweets

        for(int followeeId : follows){
            List<Tweet> tweets = userTweets.getOrDefault(followeeId, new ArrayList<>());
            
            for(int i = tweets.size() - 1; i >=0 && i >= tweets.size() - 10; i--){
                minHeap.offer(tweets.get(i));
                if(minHeap.size()>10){
                    minHeap.poll();
                }
            }
        }

        LinkedList<Integer> result = new LinkedList<>();
        while(!minHeap.isEmpty()){
            result.addFirst(minHeap.poll().tweetId);
        }

        return result;
    }
    
    public void follow(int followerId, int followeeId) {
        if(followerId == followeeId) return;

        userFollows.putIfAbsent(followerId, new HashSet<>());
        userFollows.get(followerId).add(followeeId);
    }
    
    public void unfollow(int followerId, int followeeId) {
        if(followerId == followeeId) return;

        if(userFollows.containsKey(followerId)){
            userFollows.get(followerId).remove(followeeId);
        }
    }
}

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter obj = new Twitter();
 * obj.postTweet(userId,tweetId);
 * List<Integer> param_2 = obj.getNewsFeed(userId);
 * obj.follow(followerId,followeeId);
 * obj.unfollow(followerId,followeeId);
 */