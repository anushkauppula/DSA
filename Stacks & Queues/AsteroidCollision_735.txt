// O(n), O(n)
class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> st = new Stack<>();
        int n = asteroids.length;

        for(int i = 0; i < n; i++){
            int curr = asteroids[i];
            if(curr > 0){
                st.push(curr);
            }else{
                while(!st.isEmpty() && st.peek() > 0 && st.peek() < Math.abs(curr)){
                    st.pop();                    
                }

                if(!st.isEmpty() && st.peek() == Math.abs(curr)){
                        st.pop();
                }else if(st.isEmpty() || st.peek() < 0){
                        st.push(curr);
                }
            }
        }

        return st.stream().mapToInt(Integer::intValue).toArray();

    }
}