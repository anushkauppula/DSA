/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// O(n), O(h) h is height/level of the tree
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();

        recursionRight(root, 0, res);
        return res;
    }

    public void recursionRight(TreeNode node, int level, List<Integer> res){
        if(node == null){
            return;
        }

        if(res.size() == level){
            res.add(node.val);
        }
        
        recursionRight(node.right, level + 1, res);
        recursionRight(node.left, level + 1, res);        
    }
}