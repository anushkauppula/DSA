/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// O(n), O(n)
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return isUtil(root.left, root.right);
    }

    public boolean isUtil(TreeNode node1, TreeNode node2){

        if(node1 == null || node2 == null){
            return node1 == node2;
        }

        return ((node1.val == node2.val) && isUtil(node1.left, node2.right)
                    && isUtil(node1.right, node2.left));
    }
}