// Memoization O(n), O(n)
class Solution {
    public int climbStairs(int n) {
        int[] dp = new int[n+1];
        return helper(n, dp);
    }

    public int helper(int n, int[] dp){
        if(n==0 || n==1){
            return 1;
        }

        if(dp[n] != 0) return dp[n];

        dp[n] = helper(n-1, dp) + helper(n-2, dp);
        return dp[n];
    }
}

// Tabulation O(n), O(1)
class Solution {
    public int climbStairs(int n) {
        if(n <= 1) return 1;
        
        int a = 1, b = 1;
        for(int i = 2; i <= n; i++){
            int c = a + b;

            a = b;
            b = c;
        }

        return b;
    }

}