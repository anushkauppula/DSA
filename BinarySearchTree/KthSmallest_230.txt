/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// O(n), O(h)
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        int[] smallest = new int[1];
        int[] count = new int[1];
        inOrder(root, count, k, smallest);
        return smallest[0];
    }

    public void inOrder(TreeNode root, int[] count, int k, int[] smallest){
        if(root == null || count[0] >= k){
            return;
        }

        inOrder(root.left, count, k, smallest);

        count[0]++;
        if(count[0] == k){
            smallest[0] = root.val;
            return;
        }

        inOrder(root.right, count, k, smallest);

    }
}